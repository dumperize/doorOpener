import { Telegraf } from 'telegraf';

import { getConfigValue, validateAppConfig } from './config';
import { OpenDoorKeyWordMatcher } from './services/OpenDoorKeyWordMatcher';
import { WilLockService } from './services/WiLockService';
import { logger } from './utils/logger';

async function startApp() {
  await validateAppConfig();

  const botToken = getConfigValue('botToken');
  const bot = new Telegraf(botToken);

  bot.on('message', async (ctx) => {
    const chatInfo = await ctx.getChat();

    const allowedGroupId = getConfigValue('allowedGroupId');
    if (allowedGroupId !== chatInfo.id) {
      await ctx.reply('–•–º, –Ω–µ –º–æ–≥—É —Ç—É—Ç —Å –≤–∞–º–∏ —Ä–∞–±–æ—Ç–∞—Ç—å, —Å–æ—Ä—è–Ω. –ú–æ–≥—É —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø–µ');
      return;
    }

    if (OpenDoorKeyWordMatcher.isOpenDoorMessage(ctx.message?.text || '')) {
      await ctx.reply('–û–∫, —Å–µ–∫—É–Ω–¥—É, —É–∂–µ –æ—Ç–∫—Ä—ã–≤–∞—é üö∂üèæ');
      const result = await WilLockService.openTheDoor();
      if (result === true) {
        await ctx.reply('–ì–æ—Ç–æ–≤–æ üëå –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∞–º—ã–π —É—é—Ç–Ω—ã–π –æ—Ñ–∏—Å ü§ü ');
        return;
      }
      await ctx.reply('–•–º, —á—Ç–æ-—Ç–æ —É –º–µ–Ω—è –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –Ω–∏—á–µ–≥–æ üòî –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –º–µ–Ω—è –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –∫–æ–≥–æ-—Ç–æ –¥—Ä—É–≥–æ–≥–æ');
    }
  });

  await bot.launch();
  logger.info('bot successfully launched');
}

startApp();
